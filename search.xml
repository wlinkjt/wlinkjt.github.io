<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>嵌入式基础通信之红外通信-R05d协议</title>
      <link href="/2022/07/15/qian-ru-shi-ji-chu-tong-xin-zhi-hong-wai-tong-xin/"/>
      <url>/2022/07/15/qian-ru-shi-ji-chu-tong-xin-zhi-hong-wai-tong-xin/</url>
      
        <content type="html"><![CDATA[<h1 id="1-硬件基础"><a href="#1-硬件基础" class="headerlink" title="1 硬件基础"></a>1 硬件基础</h1><p> 红外通信一般包含红外发射电路以及红外接收电路两部分。红外发射电路主要将二进制信号通过脉宽调制的方式以红外光的形式发射出去；红外接收电路对接收到的红外信号进行解调从而实现红外通信。</p><h2 id="1-1-红外发射电路"><a href="#1-1-红外发射电路" class="headerlink" title="1.1 红外发射电路"></a>1.1 红外发射电路</h2><p> 红外通信的距离以及抗干扰强度与其功率有关，因此为保证红外通信距离一般采用mos管作为功率开关，对其进行功率放大。设计电路如图1<br> <img src="/picture/1.jpg" alt="图1 红外发射电路"><br> 该电路采用mos管通过对电流进行放大增加红外功率，笔者也对三极管通过电压放大增加功率的方式进行过实验，其效果不如电流放大的形式。在电路外围并联电容存储能量，防止在进行红外通信时因为频率过快，电能供应不及时而导致通信效果不佳。</p><h2 id="1-2-红外接收电路"><a href="#1-2-红外接收电路" class="headerlink" title="1.2 红外接收电路"></a>1.2 红外接收电路</h2><p> 红外接收电路对红外信号进行接收、放大、检波、整形并最后解调出二进制脉冲，从而完成红外通信。因笔者对接收电路原理了解不多，直接采购淘宝的接收模块，因此对接收电路不做评述。</p><h1 id="2-R05d协议介绍"><a href="#2-R05d协议介绍" class="headerlink" title="2 R05d协议介绍"></a>2 R05d协议介绍</h1><p>  R05d协议为美的空调红外通信协议，其编码与时序与NEC不同，下面以编码和时序两部分对其进行详细介绍。</p><h2 id="2-1-R05d协议编码"><a href="#2-1-R05d协议编码" class="headerlink" title="2.1 R05d协议编码"></a>2.1 R05d协议编码</h2><p>  R05d通常编码形式为LAA’BB’CC’SLAA’BB’CC’(部分协议尾部还会加一个结束码)。<br>  L为引导码；S为分隔码，用于区分第一帧与第二帧；<br>  A为识别码，一般采用A=0xB2，预留A=0xB7，A’为A的反码；B用于控制空调风速，B’为B的反码；C用于控制温度以及模式，C’为C的反码。<br>  下面是B各值代表的含义<br>  <img src="" alt="图2 B-参数表"><br>  下面是C各值代表的含义<br>  <img src="" alt="图3 C-参数表"><br>  ==注意：各编码都为高位先发==</p><h2 id="2-2-R05d协议时序"><a href="#2-2-R05d协议时序" class="headerlink" title="2.2 R05d协议时序"></a>2.2 R05d协议时序</h2><p>  下面主要对引导码，分隔码，“0”数据，“1”数据以及终止符进行时序讲解。<br>  <strong>发送引导码</strong><br>  <img src="" alt="图4 引导码时序"><br>  <strong>发送分隔码</strong><br>  <img src="" alt="图5 分隔码时序"><br>  <strong>发送“0”数据</strong><br>  <img src="" alt="图6 “0”数据时序"><br>  <strong>发送“1”数据</strong><br>  <img src="" alt="图7 “1”数据时序"><br>  <strong>发送终止符</strong><br>  <img src="" alt="图8 终止符时序"><br>==各时序时间不要求完全相等，可以存在一定的误差==</p><h1 id="3-程序代码"><a href="#3-程序代码" class="headerlink" title="3 程序代码"></a>3 程序代码</h1><p>  本程序采用stm32进行编写，以通用IO进行控制，对于定时器资源不足的情况具有较好的适应性。</p><pre class="line-numbers language-none"><code class="language-none">//红外通信 R05D电控协议void IR_Init(){   GPIO_InitTypeDef  GPIO_InitStructure;   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;  //PC11   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   //推挽输出   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  //IO速度为50MHz   GPIO_Init(GPIOC, &amp;GPIO_InitStructure);  //初始化GPIOA.15   GPIO_ResetBits(GPIOC,GPIO_Pin_11);}//38KHz 发送载波 高电平 1/38KHz=26.3us 高点26.3/3=8.77us 低电17.53us//a-----发送载波周期数//发射0-----a=21  0.54ms/26.14us=20.658 //发射1-----a=62  1.62ms/26.14us=61.974//发射S-----a=200 5.22ms/26.14us=199.693   //201//发射L-----a=168 4.4ms/26.14us=168.324    //169void Send_IR(u32 a){while(a--){    IR=1;  delay_us(8);  IR=0;  delay_us(17);}}//38KHz 不发送载波 低电平//发射0-----a=21  0.54ms/26.15us=20.65//发射1-----a=21  0.54ms/26.15us=20.65//发射S-----a=21  0.54ms/26.15us=20.65//发射L-----a=168 4.4ms/26.15us=168.26   //169void No_Send_IR(u32 a){   while(a--) {   IR=0;   delay_us(26); }}//发射1void Send_h(){ Send_IR(21); No_Send_IR(61);}//发射0void Send_l(){   Send_IR(21);   No_Send_IR(20);}//发射L 引导码void Send_L(){ Send_IR(168); No_Send_IR(168);}//发射S 分隔码void Send_S(){   Send_IR(21);   No_Send_IR(201);}//发射终止符void Send_End(){   Send_IR(21);//0.54ms低(接收端)  高(发送端)}//一般情况编码方式 A' B' C'分别为ABC的反码，L引导码，S分隔码，A识别码(A=10110010=0xB2，预留方案时A=10110111=0xB7)//LAA'BB'CC' S LAA'BB'CC'//高位先发，用于分析时序//B各位 bit7-bit5 风速 bit4-bit0 默认为1//C各位 bit7-bit4 温度 bit3-bit2 模式 10-自动  bit1-bit0 00//      0000-17度                    00-制冷//      0001-18                      11-制热//      0011-19度                    01-抽风/送湿//      0010-20 //2//      0110-21 //6//      0111-22 //7//      0101-23 //5//      0100-24 //4//      1100-25 //c//      1101-26 //d//      1001-27 //9//      1000-28 //8//      1010-29 //a//      1011-30 //bvoid Send_Message(u8 A,u8 B,u8 C){  u8 temp; int i;   Send_L(); temp=A; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~A; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }  temp=B; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~B; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }  temp=C; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~C; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }    Send_S();   Send_L(); temp=A; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~A; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }  temp=B; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~B; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }  temp=C; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  } temp=~C; for(i=0;i&lt;8;i++) {   if(temp&amp;0x80) Send_h(); else Send_l();temp=temp&lt;&lt;1;  }   Send_S(); Send_L(); Send_Unknow();   Send_End(); }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4 实验分析"></a>4 实验分析</h1><p>通过stm32控制红外发射管将调制后的红外信号发送，以红外接收管对数据进行接收，通过示波器测量红外接收管接收到的信号，对通信数据正确性进行验证。<br>下面是通过示波器采集到的红外接收管上传出的信号：<br><img src=""><br><img src=""><br><img src=""><br><img src=""><br><img src=""><br><img src=""><br>通过对空调进行控制，能完美控制空调。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOS管基本知识回顾以及应用</title>
      <link href="/2022/01/12/hello-world/"/>
      <url>/2022/01/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
